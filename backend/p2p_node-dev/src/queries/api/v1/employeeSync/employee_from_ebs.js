const isEmpty = require("is-empty");

let empSyncTotalCount = async (SEARCH_FIELD) => {
  let query = `SELECT
  
  COUNT(FU.EMPLOYEE_ID) AS TOTAL
FROM
  PO.PO_AGENTS PA
  JOIN HR.PER_ALL_PEOPLE_F PAPF ON PA.AGENT_ID = PAPF.PERSON_ID
  LEFT JOIN APPLSYS.FND_USER FU ON FU.EMPLOYEE_ID = PAPF.PERSON_ID
  LEFT JOIN PER_ALL_ASSIGNMENTS_F PAF ON PAPF.PERSON_ID=PAF.PERSON_ID
  LEFT JOIN HR_ALL_ORGANIZATION_UNITS HAOU ON PAF.ORGANIZATION_ID=HAOU.ORGANIZATION_ID
WHERE
  SYSDATE BETWEEN PAPF.EFFECTIVE_START_DATE AND PAPF.EFFECTIVE_END_DATE
  AND SYSDATE BETWEEN PAF.EFFECTIVE_START_DATE AND PAF.EFFECTIVE_END_DATE
  AND PA.END_DATE_ACTIVE IS NULL
  AND FU.END_DATE IS NULL
 AND (
   FU.USER_NAME = NVL(TO_CHAR(:SEARCH_FIELD), FU.USER_NAME)
OR PAPF.EMAIL_ADDRESS = NVL(TO_CHAR(:SEARCH_FIELD), PAPF.EMAIL_ADDRESS)
OR PAPF.FULL_NAME = NVL(TO_CHAR(:SEARCH_FIELD), PAPF.FULL_NAME)
OR TO_CHAR(PA.AGENT_ID) = NVL(TO_CHAR(:SEARCH_FIELD), PA.AGENT_ID)
OR TO_CHAR(UPPER(HAOU.NAME)) = NVL(TO_CHAR(UPPER(:SEARCH_FIELD)), HAOU.NAME)
  )
 `;
  return query;
};

let empList = async (SEARCH_FIELD, P_OFFSET, P_LIMIT) => {
  let query = `SELECT
  FU.EMPLOYEE_ID,
  PA.AGENT_ID AS BUYER_ID,
  FU.USER_NAME,
  PAPF.FULL_NAME AS FULL_NAME,
  HAOU.NAME AS DEPARTMENT,
  PAPF.EMAIL_ADDRESS,
  PAPF.BUSINESS_GROUP_ID,
  (SELECT NAME FROM PER_BUSINESS_GROUPS WHERE BUSINESS_GROUP_ID = PAPF.BUSINESS_GROUP_ID) AS BUSINESS_GROUP_NAME,
  TO_CHAR(FU.START_DATE, 'YYYY-MM-DD') AS START_DATE,
  TO_CHAR(FU.END_DATE, 'YYYY-MM-DD') AS END_DATE
FROM
  PO.PO_AGENTS PA
  JOIN HR.PER_ALL_PEOPLE_F PAPF ON PA.AGENT_ID = PAPF.PERSON_ID
  LEFT JOIN APPLSYS.FND_USER FU ON FU.EMPLOYEE_ID = PAPF.PERSON_ID
  LEFT JOIN PER_ALL_ASSIGNMENTS_F PAF ON PAPF.PERSON_ID=PAF.PERSON_ID
  LEFT JOIN HR_ALL_ORGANIZATION_UNITS HAOU ON PAF.ORGANIZATION_ID=HAOU.ORGANIZATION_ID
WHERE
  SYSDATE BETWEEN PAPF.EFFECTIVE_START_DATE AND PAPF.EFFECTIVE_END_DATE
  AND SYSDATE BETWEEN PAF.EFFECTIVE_START_DATE AND PAF.EFFECTIVE_END_DATE
  AND PA.END_DATE_ACTIVE IS NULL
  AND FU.END_DATE IS NULL
 AND (
   FU.USER_NAME = NVL(TO_CHAR(:SEARCH_FIELD), FU.USER_NAME)
OR PAPF.EMAIL_ADDRESS = NVL(TO_CHAR(:SEARCH_FIELD), PAPF.EMAIL_ADDRESS)
OR PAPF.FULL_NAME = NVL(TO_CHAR(:SEARCH_FIELD), PAPF.FULL_NAME)
OR TO_CHAR(PA.AGENT_ID) = NVL(TO_CHAR(:SEARCH_FIELD), PA.AGENT_ID)
OR TO_CHAR(UPPER(HAOU.NAME)) = NVL(TO_CHAR(UPPER(:SEARCH_FIELD)), HAOU.NAME)
  )
ORDER BY
  FU.EMPLOYEE_ID
  OFFSET :P_OFFSET ROWS FETCH NEXT :P_LIMIT ROWS ONLY
`;
  return query;
};



module.exports = {
  empSyncTotalCount,
  empList,
};


/*
SELECT
  FU.EMPLOYEE_ID,
  PA.AGENT_ID AS BUYER_ID,
  FU.USER_NAME,
  PAPF.FULL_NAME AS FULL_NAME,
  PAPF.EMAIL_ADDRESS,
  PAPF.BUSINESS_GROUP_ID,
  (SELECT NAME FROM per_business_groups WHERE BUSINESS_GROUP_ID = PAPF.BUSINESS_GROUP_ID) AS BUSINESS_GROUP_NAME,
  TO_CHAR(FU.START_DATE, 'YYYY-MM-DD') AS START_DATE,
  TO_CHAR(FU.END_DATE, 'YYYY-MM-DD') AS END_DATE
FROM
  PO.PO_AGENTS PA
  JOIN HR.PER_ALL_PEOPLE_F PAPF ON PA.AGENT_ID = PAPF.PERSON_ID
  LEFT JOIN APPLSYS.FND_USER FU ON FU.EMPLOYEE_ID = PAPF.PERSON_ID
WHERE
  SYSDATE BETWEEN PAPF.EFFECTIVE_START_DATE AND PAPF.EFFECTIVE_END_DATE
  AND PA.END_DATE_ACTIVE IS NULL
  AND FU.END_DATE IS NULL
 AND (
   FU.USER_NAME = NVL(TO_CHAR(:SEARCH_FIELD), FU.USER_NAME)
OR PAPF.EMAIL_ADDRESS = NVL(TO_CHAR(:SEARCH_FIELD), PAPF.EMAIL_ADDRESS)
OR PAPF.FULL_NAME = NVL(TO_CHAR(:SEARCH_FIELD), PAPF.FULL_NAME)
OR TO_CHAR(PA.AGENT_ID) = NVL(TO_CHAR(:SEARCH_FIELD), PA.AGENT_ID)

  )

ORDER BY
  FU.EMPLOYEE_ID
OFFSET :P_OFFSET ROWS FETCH NEXT :P_LIMIT ROWS ONLY*/