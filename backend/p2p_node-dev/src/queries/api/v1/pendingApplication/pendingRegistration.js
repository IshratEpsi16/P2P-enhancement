

  let pendingRegistration = async (APPROVER_ID,APPROVAL_STATUS,SEARCH_VALUE) => {
    let query = 
    `
    SELECT
    US.USER_ID AS SUPPLIER_ID,
    US.FULL_NAME AS SUPPLIER_FULL_NAME,
    US.USER_NAME AS SUPPLIER_USER_NAME,
    BSC.ORGANIZATION_NAME,
    NVL(RD.PROFILE_PIC1_FILE_NAME,'N/A') AS PROFILE_PIC1_FILE_NAME,
    NVL(RD.PROFILE_PIC2_FILE_NAME,'N/A') AS PROFILE_PIC2_FILE_NAME,
    US.EMAIL_ADDRESS,
    US.APPROVAL_STATUS,
    AM.MODULE_ID,
    SA.STAGE_ID,
    SA.STAGE_LEVEL,
    SA.STAGE_SEQ,
    SA.IS_MUST_APPROVE,
    'N' AS INITIATOR
    FROM
    XXP2P.XXP2P_STAGE_APPROVERS SA,
    XXP2P.XXP2P_APPROVAL_STAGES XAS,
    XXP2P.XXP2P_APPROVAL_MODULE AM,
    XXP2P.XXP2P_USER US,
    XXP2P.XXP2P_SUPPLIER_BSC_INFO BSC,
    XXP2P.XXP2P_SUPPLIER_REGISTRATION_DOCUMENTS RD
    WHERE SA.USER_ID = :APPROVER_ID
    AND XAS.MODULE_TYPE_ID = AM.MODULE_ID
    AND LOWER(AM.MODULE_NAME) = LOWER('Supplier Approval')
    AND US.REG_TEMPLATE_ID = SA.STAGE_ID
    AND US.REG_TEMPLATE_STAGE_LEVEL = SA.STAGE_LEVEL
    AND US.APPROVAL_STATUS = NVL(:APPROVAL_STATUS,US.APPROVAL_STATUS)
    AND BSC.USER_ID = US.USER_ID
    AND RD.USER_ID(+) = US.USER_ID
    AND SUBMISSION_STATUS = 'SUBMIT'
    and INITIATOR_STATUS = 'APPROVED'
    AND (
      LOWER(us.USER_NAME) LIKE '%' || LOWER(NVL(:SEARCH_VALUE, us.USER_NAME)) || '%'
      OR LOWER(bsc.ORGANIZATION_NAME) LIKE '%' || LOWER(NVL(:SEARCH_VALUE, bsc.ORGANIZATION_NAME)) || '%'
      OR LOWER(us.EMAIL_ADDRESS) LIKE '%' || LOWER(NVL(:SEARCH_VALUE, us.EMAIL_ADDRESS)) || '%'
  )
    `;
    return query;
  };

  let initiatorPendingRegistration = async (APPROVER_ID,APPROVAL_STATUS,SEARCH_VALUE) => {
    let query = 
    `
   SELECT
    US.USER_ID AS SUPPLIER_ID,
    US.FULL_NAME AS SUPPLIER_FULL_NAME,
    US.USER_NAME AS SUPPLIER_USER_NAME,
    BSC.ORGANIZATION_NAME,
    NVL(RD.PROFILE_PIC1_FILE_NAME,'N/A') AS PROFILE_PIC1_FILE_NAME,
    NVL(RD.PROFILE_PIC2_FILE_NAME,'N/A') AS PROFILE_PIC2_FILE_NAME,
    US.EMAIL_ADDRESS,
    US.APPROVAL_STATUS,
    AM.MODULE_ID,
    SA.STAGE_ID,
    SA.STAGE_LEVEL,
    SA.STAGE_SEQ,
    SA.IS_MUST_APPROVE,
    'Y' AS INITIATOR
    FROM
    XXP2P.XXP2P_STAGE_APPROVERS SA,
    XXP2P.XXP2P_APPROVAL_STAGES XAS,
    XXP2P.XXP2P_APPROVAL_MODULE AM,
    XXP2P.XXP2P_USER US,
    XXP2P.XXP2P_SUPPLIER_BSC_INFO BSC,
    XXP2P.XXP2P_SUPPLIER_REGISTRATION_DOCUMENTS RD
    WHERE US.INITIATOR_ID = :APPROVER_ID
    and US.INITIATOR_STATUS = :APPROVAL_STATUS
    AND BSC.USER_ID = US.USER_ID
    AND RD.USER_ID(+) = US.USER_ID
    AND US.SUBMISSION_STATUS = 'SUBMIT'
    AND US.APPROVAL_STATUS = 'IN PROCESS'
    AND US.IS_REG_COMPLETE = 0
    AND XAS.MODULE_TYPE_ID = AM.MODULE_ID
    AND LOWER(AM.MODULE_NAME) = LOWER('Supplier Approval')
    AND US.REG_TEMPLATE_ID = SA.STAGE_ID
    AND US.REG_TEMPLATE_STAGE_LEVEL = SA.STAGE_LEVEL
    AND (
      LOWER(us.USER_NAME) LIKE '%' || LOWER(NVL(:SEARCH_VALUE, us.USER_NAME)) || '%'
      OR LOWER(bsc.ORGANIZATION_NAME) LIKE '%' || LOWER(NVL(:SEARCH_VALUE, bsc.ORGANIZATION_NAME)) || '%'
      OR LOWER(us.EMAIL_ADDRESS) LIKE '%' || LOWER(NVL(:SEARCH_VALUE, us.EMAIL_ADDRESS)) || '%'
  )
  ORDER BY US.CREATION_DATE 
  

   
    `;
    return query;
  };

  let pendingRegistrationTotal = async (APPROVER_ID,APPROVAL_STATUS,SEARCH_VALUE) => {
    let query = 
    `
    SELECT
    COUNT(US.USER_ID) AS TOTAL
    FROM
    XXP2P.XXP2P_STAGE_APPROVERS SA,
    XXP2P.XXP2P_APPROVAL_STAGES XAS,
    XXP2P.XXP2P_APPROVAL_MODULE AM,
    XXP2P.XXP2P_USER US,
    XXP2P.XXP2P_SUPPLIER_BSC_INFO BSC
    WHERE SA.USER_ID = :APPROVER_ID
    AND XAS.MODULE_TYPE_ID = AM.MODULE_ID
    AND LOWER(AM.MODULE_NAME) = LOWER('Supplier Approval')
    AND US.REG_TEMPLATE_ID = SA.STAGE_ID
    AND US.REG_TEMPLATE_STAGE_LEVEL = SA.STAGE_LEVEL
    AND US.APPROVAL_STATUS = NVL(:APPROVAL_STATUS,US.APPROVAL_STATUS)
    AND BSC.USER_ID = US.USER_ID
    AND SUBMISSION_STATUS = 'SUBMIT'
    AND (
      LOWER(us.USER_NAME) LIKE '%' || LOWER(NVL(:SEARCH_VALUE, us.USER_NAME)) || '%'
      OR LOWER(bsc.ORGANIZATION_NAME) LIKE '%' || LOWER(NVL(:SEARCH_VALUE, bsc.ORGANIZATION_NAME)) || '%'
      OR LOWER(us.EMAIL_ADDRESS) LIKE '%' || LOWER(NVL(:SEARCH_VALUE, us.EMAIL_ADDRESS)) || '%'
  )
    `;
    return query;
  };

  let initiatorPendingRegistrationTotal = async (APPROVER_ID,APPROVAL_STATUS,SEARCH_VALUE) => {
    let query = 
    `
    SELECT
    COUNT(US.USER_ID) AS TOTAL
    FROM
    XXP2P.XXP2P_STAGE_APPROVERS SA,
    XXP2P.XXP2P_APPROVAL_STAGES XAS,
    XXP2P.XXP2P_APPROVAL_MODULE AM,
    XXP2P.XXP2P_USER US,
    XXP2P.XXP2P_SUPPLIER_BSC_INFO BSC
    WHERE US.INITIATOR_ID = :APPROVER_ID
    and INITIATOR_STATUS = :APPROVAL_STATUS
    AND US.APPROVAL_STATUS = 'IN PROCESS'
    AND US.IS_REG_COMPLETE = 0
    AND XAS.MODULE_TYPE_ID = AM.MODULE_ID
    AND LOWER(AM.MODULE_NAME) = LOWER('Supplier Approval')
    AND US.REG_TEMPLATE_ID = SA.STAGE_ID
    AND US.REG_TEMPLATE_STAGE_LEVEL = SA.STAGE_LEVEL
    AND US.APPROVAL_STATUS = NVL(:APPROVAL_STATUS,US.APPROVAL_STATUS)
    AND BSC.USER_ID = US.USER_ID
    AND SUBMISSION_STATUS = 'SUBMIT'
    AND (
      LOWER(us.USER_NAME) LIKE '%' || LOWER(NVL(:SEARCH_VALUE, us.USER_NAME)) || '%'
      OR LOWER(bsc.ORGANIZATION_NAME) LIKE '%' || LOWER(NVL(:SEARCH_VALUE, bsc.ORGANIZATION_NAME)) || '%'
      OR LOWER(us.EMAIL_ADDRESS) LIKE '%' || LOWER(NVL(:SEARCH_VALUE, us.EMAIL_ADDRESS)) || '%'
  )
    
    `;
    return query;
  };



  module.exports = {
    pendingRegistration,
    pendingRegistrationTotal,
    initiatorPendingRegistration,
    initiatorPendingRegistrationTotal
  };
