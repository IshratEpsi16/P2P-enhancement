    let pendingProfileUpdate = async (APPROVER_ID, APPROVAL_STATUS,SEARCH_VALUE) => {
      let query = `
      SELECT
    US.USER_ID AS SUPPLIER_ID,
    US.FULL_NAME AS SUPPLIER_FULL_NAME,
    US.USER_NAME AS SUPPLIER_USER_NAME,
    BSC.ORGANIZATION_NAME,
    US.EMAIL_ADDRESS,
    US.PROFILE_UPDATE_STATUS AS APPROVAL_STATUS,
    AM.MODULE_ID,
    SA.STAGE_ID,
    SA.STAGE_LEVEL,
    SA.STAGE_SEQ,
    SA.IS_MUST_APPROVE,
    US.PROFILE_UPDATE_UID,
    US.INITIATOR_ID,
    'N' AS IS_INITIATOR
    FROM
    XXP2P.XXP2P_STAGE_APPROVERS SA,
    XXP2P.XXP2P_APPROVAL_STAGES XAS,
    XXP2P.XXP2P_APPROVAL_MODULE AM,
    XXP2P.XXP2P_USER US,
    XXP2P.XXP2P_SUPPLIER_BSC_INFO BSC

    WHERE SA.USER_ID = :APPROVER_ID
    AND XAS.MODULE_TYPE_ID = AM.MODULE_ID
    AND LOWER(AM.MODULE_NAME) = LOWER('Profile Update')
    AND US.PROFILE_UPDATE_TEMPLATE_ID = SA.STAGE_ID
    AND US.PROFILE_UPDATE_TEMPLATE_STAGE_LEVEL = SA.STAGE_LEVEL
    AND US.PROFILE_UPDATE_STATUS = NVL(:APPROVAL_STATUS,US.PROFILE_UPDATE_STATUS)
    AND US.INITIATOR_STATUS = 'APPROVED'
    AND BSC.USER_ID = US.USER_ID
    AND (
      LOWER(us.USER_NAME) LIKE '%' || LOWER(NVL(:SEARCH_VALUE, us.USER_NAME)) || '%'
      OR LOWER(bsc.ORGANIZATION_NAME) LIKE '%' || LOWER(NVL(:SEARCH_VALUE, bsc.ORGANIZATION_NAME)) || '%'
      OR LOWER(us.EMAIL_ADDRESS) LIKE '%' || LOWER(NVL(:SEARCH_VALUE, us.EMAIL_ADDRESS)) || '%'
  )
  ORDER BY US.LAST_UPDATE_DATE DESC
      `;
      return query;
    };

    let pendingProfileUpdateTotal = async (APPROVER_ID, APPROVAL_STATUS,SEARCH_VALUE) => {
      let query = `
      SELECT
    COUNT(US.USER_ID) AS TOTAL
    FROM
    XXP2P.XXP2P_STAGE_APPROVERS SA,
    XXP2P.XXP2P_APPROVAL_STAGES XAS,
    XXP2P.XXP2P_APPROVAL_MODULE AM,
    XXP2P.XXP2P_USER US,
    XXP2P.XXP2P_SUPPLIER_BSC_INFO BSC

    WHERE SA.USER_ID = :APPROVER_ID
    AND XAS.MODULE_TYPE_ID = AM.MODULE_ID
    AND LOWER(AM.MODULE_NAME) = LOWER('Profile Update')
    AND US.PROFILE_UPDATE_TEMPLATE_ID = SA.STAGE_ID
    AND US.PROFILE_UPDATE_TEMPLATE_STAGE_LEVEL = SA.STAGE_LEVEL
    AND US.PROFILE_UPDATE_STATUS = NVL(:APPROVAL_STATUS,US.PROFILE_UPDATE_STATUS)
    AND US.INITIATOR_STATUS = 'APPROVED'
    AND BSC.USER_ID = US.USER_ID
    AND (
      LOWER(us.USER_NAME) LIKE '%' || LOWER(NVL(:SEARCH_VALUE, us.USER_NAME)) || '%'
      OR LOWER(bsc.ORGANIZATION_NAME) LIKE '%' || LOWER(NVL(:SEARCH_VALUE, bsc.ORGANIZATION_NAME)) || '%'
      OR LOWER(us.EMAIL_ADDRESS) LIKE '%' || LOWER(NVL(:SEARCH_VALUE, us.EMAIL_ADDRESS)) || '%'
  )
      `;
      return query;
    };

    let pendingProfileUpdateDetails = async (
      STAGE_ID,
      STAGE_LEVEL,
      SUPPLIER_ID,
      APPROVER_STATUS
    ) => {
      let query = `
      SELECT
      LT.ACTION_ID,
      LT.ACTION_DATE,
      LT.ACTION_TAKEN_BY AS SUPPLIER_ID,
      US.EMAIL_ADDRESS,
      BSC.ORGANIZATION_NAME,
      LT.TABLE_NAME,
      LT.COLUMN_NAME,
      LT.OLD_VALUE,
      LT.NEW_VALUE,
      LT.APPROVER_STATUS,
      LT.PK_COLUMN_VALUE,
      LT.PROFILE_UPDATE_TEMPLATE_ID,
      LT.PROFILE_UPDATE_TEMPLATE_STAGE_LEVEL
    FROM
      XXP2P.UPDATE_LOG_TABLE LT,
      XXP2P.XXP2P_SUPPLIER_BSC_INFO BSC,
      XXP2P.XXP2P_USER US
      WHERE LT.PROFILE_UPDATE_TEMPLATE_ID =:STAGE_ID
      AND LT.PROFILE_UPDATE_TEMPLATE_STAGE_LEVEL = :STAGE_LEVEL
      AND LT.ACTION_TAKEN_BY= US.USER_ID
      AND LT.ACTION_TAKEN_BY = :SUPPLIER_ID
      AND BSC.USER_ID = US.USER_ID
      AND UPPER(LT.APPROVER_STATUS) = UPPER(:APPROVER_STATUS)
      ORDER BY LT.ACTION_DATE ASC
      `;
      return query;
    };

    let pendingProfileNewInfoAdd = async (APPROVER_ID, APPROVAL_STATUS,SEARCH_VALUE) => {
      let query = `
      SELECT
    US.USER_ID AS SUPPLIER_ID,
    US.FULL_NAME AS SUPPLIER_FULL_NAME,
    US.USER_NAME AS SUPPLIER_USER_NAME,
    BSC.ORGANIZATION_NAME,
    US.EMAIL_ADDRESS,
    US.PROFILE_UPDATE_STATUS AS APPROVAL_STATUS,
    AM.MODULE_ID,
    SA.STAGE_ID,
    SA.STAGE_LEVEL,
    SA.STAGE_SEQ,
    SA.IS_MUST_APPROVE
    FROM
    XXP2P.XXP2P_STAGE_APPROVERS SA,
    XXP2P.XXP2P_APPROVAL_STAGES XAS,
    XXP2P.XXP2P_APPROVAL_MODULE AM,
    XXP2P.XXP2P_USER US,
    XXP2P.XXP2P_SUPPLIER_BSC_INFO BSC

    WHERE SA.USER_ID = :APPROVER_ID
    AND XAS.MODULE_TYPE_ID = AM.MODULE_ID
    AND LOWER(AM.MODULE_NAME) = LOWER('Profile Update')
    AND US.NEW_INFO_TEMPLATE_ID = SA.STAGE_ID
    AND US.NEW_INFO_STAGE_LEVEL = SA.STAGE_LEVEL
    AND US.NEW_INFO_STATUS = NVL(:APPROVAL_STATUS,US.NEW_INFO_STATUS)
    AND US.INITIATOR_STATUS = 'APPROVED'
    AND BSC.USER_ID = US.USER_ID
    AND (
      LOWER(us.USER_NAME) LIKE '%' || LOWER(NVL(:SEARCH_VALUE, us.USER_NAME)) || '%'
      OR LOWER(bsc.ORGANIZATION_NAME) LIKE '%' || LOWER(NVL(:SEARCH_VALUE, bsc.ORGANIZATION_NAME)) || '%'
      OR LOWER(us.EMAIL_ADDRESS) LIKE '%' || LOWER(NVL(:SEARCH_VALUE, us.EMAIL_ADDRESS)) || '%'
  )
      `;
      return query;
    };

    let pendingProfileNewInfoAddTotal = async (APPROVER_ID, APPROVAL_STATUS,SEARCH_VALUE) => {
      let query = `
      SELECT
    COUNT(US.USER_ID) AS TOTAL
    FROM
    XXP2P.XXP2P_STAGE_APPROVERS SA,
    XXP2P.XXP2P_APPROVAL_STAGES XAS,
    XXP2P.XXP2P_APPROVAL_MODULE AM,
    XXP2P.XXP2P_USER US,
    XXP2P.XXP2P_SUPPLIER_BSC_INFO BSC

    WHERE SA.USER_ID = :APPROVER_ID
    AND XAS.MODULE_TYPE_ID = AM.MODULE_ID
    AND LOWER(AM.MODULE_NAME) = LOWER('Profile Update')
    AND US.NEW_INFO_TEMPLATE_ID = SA.STAGE_ID
    AND US.NEW_INFO_STAGE_LEVEL = SA.STAGE_LEVEL
    AND US.NEW_INFO_STATUS = NVL(:APPROVAL_STATUS,US.NEW_INFO_STATUS)
    AND US.INITIATOR_STATUS = 'APPROVED'
    AND BSC.USER_ID = US.USER_ID
    AND (
      LOWER(us.USER_NAME) LIKE '%' || LOWER(NVL(:SEARCH_VALUE, us.USER_NAME)) || '%'
      OR LOWER(bsc.ORGANIZATION_NAME) LIKE '%' || LOWER(NVL(:SEARCH_VALUE, bsc.ORGANIZATION_NAME)) || '%'
      OR LOWER(us.EMAIL_ADDRESS) LIKE '%' || LOWER(NVL(:SEARCH_VALUE, us.EMAIL_ADDRESS)) || '%'
  )
      `;
      return query;
    };


    let pendingProfileUpdateInitiator = async (APPROVER_ID, APPROVAL_STATUS,SEARCH_VALUE) => {
      let query = `
      SELECT
    US.USER_ID AS SUPPLIER_ID,
    US.FULL_NAME AS SUPPLIER_FULL_NAME,
    US.USER_NAME AS SUPPLIER_USER_NAME,
    BSC.ORGANIZATION_NAME,
    US.EMAIL_ADDRESS,
    US.PROFILE_UPDATE_STATUS AS APPROVAL_STATUS,
    US.PROFILE_UPDATE_TEMPLATE_ID AS STAGE_ID,
    US.PROFILE_UPDATE_TEMPLATE_STAGE_LEVEL AS STAGE_LEVEL,
    1 AS STAGE_SEQ,
    0 AS IS_MUST_APPROVE,
    US.PROFILE_UPDATE_UID,
    US.INITIATOR_ID,
    'Y' AS IS_INITIATOR
    FROM
    XXP2P.XXP2P_USER US,
    XXP2P.XXP2P_SUPPLIER_BSC_INFO BSC

    WHERE US.INITIATOR_ID = :APPROVER_ID
    AND US.INITIATOR_STATUS = NVL(:APPROVAL_STATUS,US.INITIATOR_STATUS)
    AND US.PROFILE_UPDATE_STATUS = 'IN PROCESS'
    AND SUBMISSION_STATUS = 'SUBMIT'
    AND BSC.USER_ID = US.USER_ID
    AND (
      LOWER(us.USER_NAME) LIKE '%' || LOWER(NVL(:SEARCH_VALUE, us.USER_NAME)) || '%'
      OR LOWER(bsc.ORGANIZATION_NAME) LIKE '%' || LOWER(NVL(:SEARCH_VALUE, bsc.ORGANIZATION_NAME)) || '%'
      OR LOWER(us.EMAIL_ADDRESS) LIKE '%' || LOWER(NVL(:SEARCH_VALUE, us.EMAIL_ADDRESS)) || '%'
  )
  ORDER BY US.LAST_UPDATE_DATE DESC
  
      `;
      return query;
    };

    let pendingProfileUpdateTotalInitiator = async (APPROVER_ID, APPROVAL_STATUS,SEARCH_VALUE) => {
      let query = `
      SELECT
    COUNT(US.USER_ID) TOTAL
    FROM
    XXP2P.XXP2P_USER US,
    XXP2P.XXP2P_SUPPLIER_BSC_INFO BSC

    WHERE US.INITIATOR_ID = :APPROVER_ID
    AND US.INITIATOR_STATUS = NVL(:APPROVAL_STATUS,US.INITIATOR_STATUS)
    AND US.PROFILE_UPDATE_STATUS = 'IN PROCESS'
    AND SUBMISSION_STATUS = 'SUBMIT'
    AND BSC.USER_ID = US.USER_ID
    AND (
      LOWER(us.USER_NAME) LIKE '%' || LOWER(NVL(:SEARCH_VALUE, us.USER_NAME)) || '%'
      OR LOWER(bsc.ORGANIZATION_NAME) LIKE '%' || LOWER(NVL(:SEARCH_VALUE, bsc.ORGANIZATION_NAME)) || '%'
      OR LOWER(us.EMAIL_ADDRESS) LIKE '%' || LOWER(NVL(:SEARCH_VALUE, us.EMAIL_ADDRESS)) || '%'
  )
      `;
      return query;
    };

    let approveReject = async (
      ACTION_ID,
      ACTION_CODE,
      SUPPLIER_ID,
      APPROVER_ID,
      MODULE_NAME,
      STAGE_LEVEL,
      STAGE_ID,
      NOTE,
      IS_INITIATOR,
      PROFILE_UPDATE_UID,
      
    ) => {
      let query = `
     DECLARE
        V_MESSAGE VARCHAR2(4000);
        V_STATUS  VARCHAR2(10);
    BEGIN
        -- Call the procedure
        XXP2P.XXP2P_PROFILE_UPDATE(
            :ACTION_ID,
            :ACTION_CODE,
            :SUPPLIER_ID,
            :APPROVER_ID,
            :MODULE_NAME,
            :STAGE_LEVEL,
            :STAGE_ID,
            :NOTE,
            :IS_INITIATOR,
            :PROFILE_UPDATE_UID,
            V_MESSAGE,
            V_STATUS
        );
        -- Output the messages
              :MESSAGE :=  V_MESSAGE;
              :STATUS := V_STATUS;
    END;
        `;
      return query;
    };

    module.exports = {
      pendingProfileUpdate,
      pendingProfileUpdateDetails,
      pendingProfileUpdateTotal,
      pendingProfileNewInfoAdd,
      pendingProfileNewInfoAddTotal,
      approveReject,
      pendingProfileUpdateInitiator,
      pendingProfileUpdateTotalInitiator
    };
