let rfqList = async (data) => {
  console.log(data);
  let query = `
  SELECT
  RH.INVOICE_LOOKUP_TYPE,
  RH.RFQ_ID,
  RH.RFQ_SUBJECT,
  RH.RFQ_TITLE,
  RH.RFQ_TYPE,
  RH.NEED_BY_DATE,
  RH.OPEN_DATE,
  RH.CLOSE_DATE,
  RH.NOTE_TO_SUPPLIER,
  RH.SUPLLIER_CURRENCY_CODE,
  RH.SUPLLIER_FREIGHT_CHARGE,
  RH.RFQ_ATTACHMENT_FILE_ORG_NAME,
  RH.RFQ_ATTACHMENT_FILE_NAME,
  RH.BILL_TO_LOCATION_ID,
  RH.SHIP_TO_LOCATION_ID,
  RH.ETR,
  RH.BUYER_ATTACHMENT_FILE_ORG_NAME,
  RH.BUYER_ATTACHMENT_FILE_NAME,
  RH.CURRENCY_CODE,
  RH.VAT_APPLICABLE_STATUS,
  RH.VAT_RATE,
  RH.INVOICE_TYPE,
  RH.FREIGHT_TERM,
  RH.PAYMENT_TERM_ID,
  RH.BUYER_GENERAL_TERMS,
  RH.PREPARER_ID,
  RSI.RESPONSE_STATUS,
  RSI.RESPONSE_DATE,
  RSI.SUBMISSION_STATUS,
  RSI.SUBMISSION_DATE,
  RSI.QUOT_VALID_DATE,
  RSI.CURRENCY_CODE,
  RSI.SUP_TERM_FILE,
  RSI.SUP_TERM_FILE_ORG_NAME,
  RSI.SITE_ID,
  (select ADDRESS_LINE1 from  XXP2P.XXP2P_SUPPLIER_SITE
    where ID = RSI.SITE_ID) AS ADDRESS_LINE1,
  (select ADDRESS_LINE2 from  XXP2P.XXP2P_SUPPLIER_SITE
      where ID = RSI.SITE_ID) AS ADDRESS_LINE2,
  (select CITY_STATE from  XXP2P.XXP2P_SUPPLIER_SITE
        where ID = RSI.SITE_ID) AS CITY_STATE,
  (SELECT FC.CURRENCY_CODE 
    FROM FND_CURRENCIES FC,FND_CURRENCIES_TL FCTL
    WHERE FC.CURRENCY_CODE = RSI.CURRENCY_CODE
    AND FC.CURRENCY_CODE=FCTL.CURRENCY_CODE
    AND ENABLED_FLAG = 'Y'
    AND (   END_DATE_ACTIVE IS NULL
    OR TRUNC (END_DATE_ACTIVE) > TRUNC (SYSDATE)
    )) AS SUPPLIER_CURRENCY_CODE,
  (select FULL_NAME
from  XXP2P.XXP2P_USER
where  USER_ID = RH.PREPARER_ID) AS BUYER_NAME,
  RH.PREPARER_STATUS,
  RH.RFQ_STATUS,
  RH.CREATION_DATE,
  RSI.CAN_EDIT,
  RSI.INVITATION_ID
FROM
  XXP2P.XXP2P_RFQ_HEADER RH
JOIN
  XXP2P.XXP2P_RFQ_SUPPLIER_INVITATION RSI ON RSI.RFQ_ID = RH.RFQ_ID
WHERE
  RSI.USER_ID = :USER_ID
  AND RH.RFQ_STATUS = NVL(:RFQ_STATUS, RH.RFQ_STATUS)
  AND RSI.RESPONSE_STATUS = NVL(:RESPONSE_STATUS, RSI.RESPONSE_STATUS)
  ORDER BY RH.CREATION_DATE DESC
OFFSET NVL(:OFFSET,0) ROWS
FETCH NEXT NVL(:LIMIT,10) ROWS ONLY
      `;
  return query;
};

let rfqTotal = async (data) => {
  let query = `SELECT
        
    COUNT(RH.RFQ_ID) as TOTAL
FROM
    XXP2P.XXP2P_RFQ_HEADER RH
JOIN
    XXP2P.XXP2P_RFQ_SUPPLIER_INVITATION RSI ON RSI.RFQ_ID = RH.RFQ_ID
WHERE
    RSI.USER_ID = :USER_ID
    AND RH.RFQ_STATUS = NVL(:RFQ_STATUS, RH.RFQ_STATUS)
    AND RSI.RESPONSE_STATUS = NVL(:RESPONSE_STATUS, RSI.RESPONSE_STATUS)
      `;

  return query;
};

let rfqObjectDetails = async (data) => {
  let query = `
WITH Supplier_Site_Info AS (
  SELECT
    ID,
    ADDRESS_LINE1,
    ADDRESS_LINE2,
    CITY_STATE
  FROM XXP2P.XXP2P_SUPPLIER_SITE  -- Add schema prefix if needed
)
SELECT
  RH.INVOICE_LOOKUP_TYPE,
  RH.RFQ_ID,
  RH.RFQ_SUBJECT,
  RH.RFQ_TITLE,
  RH.RFQ_TYPE,
  RH.NEED_BY_DATE,
  RH.OPEN_DATE,
  RH.CLOSE_DATE,
  RH.NOTE_TO_SUPPLIER,
  RH.CURRENCY_CODE AS RFQ_CURRENCY_CODE,
    (SELECT FCTL.NAME AS CURRENCY_NAME 
   FROM FND_CURRENCIES FC,
        FND_CURRENCIES_TL FCTL
   WHERE FC.CURRENCY_CODE = FCTL.CURRENCY_CODE
     AND ENABLED_FLAG = 'Y'
     AND (END_DATE_ACTIVE IS NULL
          OR TRUNC (END_DATE_ACTIVE) > TRUNC (SYSDATE))
     AND FC.CURRENCY_CODE = RH.CURRENCY_CODE
  ) RFQ_CURRENCY_NAME,
  RH.SUPLLIER_FREIGHT_CHARGE,
  RH.RFQ_ATTACHMENT_FILE_ORG_NAME,
  RH.RFQ_ATTACHMENT_FILE_NAME,
  RH.BILL_TO_LOCATION_ID,
  RH.SHIP_TO_LOCATION_ID,
  RH.ETR,
  RH.BUYER_ATTACHMENT_FILE_ORG_NAME,
  RH.BUYER_ATTACHMENT_FILE_NAME,
  (SELECT FCTL.NAME AS CURRENCY_NAME 
   FROM FND_CURRENCIES FC,
        FND_CURRENCIES_TL FCTL
   WHERE FC.CURRENCY_CODE = FCTL.CURRENCY_CODE
     AND ENABLED_FLAG = 'Y'
     AND (END_DATE_ACTIVE IS NULL
          OR TRUNC (END_DATE_ACTIVE) > TRUNC (SYSDATE))
     AND FC.CURRENCY_CODE = RSI.CURRENCY_CODE
  ) CURRENCY_NAME,
  RH.VAT_APPLICABLE_STATUS,
  RH.VAT_RATE,
  RH.INVOICE_TYPE,
  RH.FREIGHT_TERM,
  RH.PAYMENT_TERM_ID,
  RH.BUYER_GENERAL_TERMS,
  RH.PREPARER_ID,
  RSI.RESPONSE_STATUS,
  RSI.RESPONSE_DATE,
  RSI.SUBMISSION_STATUS,
  RSI.SUBMISSION_DATE,
  RSI.QUOT_VALID_DATE,
  RSI.CURRENCY_CODE,
  RSI.SUP_TERM_FILE,
  RSI.SUP_TERM_FILE_ORG_NAME,
  RSI.SITE_ID,
  RSI.NOTE_TO_BUYER,
  site_info.ADDRESS_LINE1,
  site_info.ADDRESS_LINE2,
  site_info.CITY_STATE,
  (SELECT FULL_NAME
   FROM XXP2P.XXP2P_USER
   WHERE USER_ID = RH.PREPARER_ID
  ) AS BUYER_NAME,
  RH.PREPARER_STATUS,
  RH.RFQ_STATUS,
  RH.CREATION_DATE,
  RSI.CAN_EDIT,
  RSI.INVITATION_ID
FROM
  XXP2P.XXP2P_RFQ_HEADER RH
JOIN
  XXP2P.XXP2P_RFQ_SUPPLIER_INVITATION RSI ON RSI.RFQ_ID = RH.RFQ_ID
LEFT JOIN
  Supplier_Site_Info site_info ON site_info.ID = RSI.SITE_ID
WHERE
  RSI.USER_ID = :USER_ID
  AND RH.RFQ_ID = :RFQ_ID
      `;
  return query;
};

module.exports = {
  rfqList,
  rfqTotal,
  rfqObjectDetails,
};
