

let approverList = async (SUPPLIER_ID,MODULE_NAME) => {
    let query = 
    `
    SELECT
    SA.STAGE_ID,
    SA.STAGE_LEVEL,
    SA.STAGE_SEQ,
    SA.USER_ID AS APPROVER_ID,
    US.FULL_NAME AS APPROVER_FULL_NAME,
    US.USER_NAME AS APPROVER_USER_NAME,
    US.PROPIC_FILE_NAME,
    SA.IS_MUST_APPROVE,
    US.EMAIL_ADDRESS,
    XXP2P.XXP2P_GET_ACTION_CODE(SA.USER_ID,:SUPPLIER_ID,SA.STAGE_ID,SA.STAGE_LEVEL) AS ACTION_CODE,
    XXP2P.XXP2P_GET_ACTION_DATE(SA.USER_ID,:SUPPLIER_ID,SA.STAGE_ID,SA.STAGE_LEVEL) AS ACTION_DATE,
    XXP2P.XXP2P_GET_ACTION_NOTE(SA.USER_ID,:SUPPLIER_ID,SA.STAGE_ID,SA.STAGE_LEVEL) AS ACTION_NOTE
    FROM
    XXP2P.XXP2P_APPROVAL_MODULE AM,
    XXP2P.XXP2P_APPROVAL_STAGES XAS,
    XXP2P.XXP2P_STAGE_APPROVERS SA,
    XXP2P.XXP2P_USER US
    WHERE LOWER(AM.MODULE_NAME) = LOWER(:MODULE_NAME)
    AND XAS.MODULE_TYPE_ID = AM.MODULE_ID
    AND XAS.AS_ID = SA.STAGE_ID
    AND US.USER_ID = SA.USER_ID
    ORDER BY SA.STAGE_LEVEL
    `;
    return query;
  };
  let invoiceApproverList = async (SUPPLIER_ID,MODULE_NAME,INV_ID) => {
    let query = 
    `
    SELECT
    SA.STAGE_ID,
    SA.STAGE_LEVEL,
    SA.STAGE_SEQ,
    SA.USER_ID AS APPROVER_ID,
    US.FULL_NAME AS APPROVER_FULL_NAME,
    US.USER_NAME AS APPROVER_USER_NAME,
    US.PROPIC_FILE_NAME,
    SA.IS_MUST_APPROVE,
    US.EMAIL_ADDRESS,
    XXP2P.XXP2P_GET_ACTION_CODE_INVOICE(:INV_ID,'INV',SA.USER_ID,:SUPPLIER_ID,SA.STAGE_ID,SA.STAGE_LEVEL) AS ACTION_CODE,
    XXP2P.XXP2P_GET_ACTION_DATE_INVOICE(:INV_ID,'INV',SA.USER_ID,:SUPPLIER_ID,SA.STAGE_ID,SA.STAGE_LEVEL) AS ACTION_DATE,
    XXP2P.XXP2P_GET_ACTION_NOTE_INVOICE(:INV_ID,'INV',SA.USER_ID,:SUPPLIER_ID,SA.STAGE_ID,SA.STAGE_LEVEL) AS ACTION_NOTE
    FROM
    XXP2P.XXP2P_APPROVAL_MODULE AM,
    XXP2P.XXP2P_APPROVAL_STAGES XAS,
    XXP2P.XXP2P_STAGE_APPROVERS SA,
    XXP2P.XXP2P_USER US
    WHERE LOWER(AM.MODULE_NAME) = LOWER(:MODULE_NAME)
    AND XAS.MODULE_TYPE_ID = AM.MODULE_ID
    AND XAS.AS_ID = SA.STAGE_ID
    AND US.USER_ID = SA.USER_ID
    ORDER BY SA.STAGE_LEVEL
    `;
    return query;
  };

  let approverListProfileUpdate = async (SUPPLIER_ID,MODULE_NAME,PROFILE_UPDATE_UID) => {
    let query = 
    `
    SELECT
    SA.STAGE_ID,
    SA.STAGE_LEVEL,
    SA.STAGE_SEQ,
    SA.USER_ID AS APPROVER_ID,
    US.FULL_NAME AS APPROVER_FULL_NAME,
    US.USER_NAME AS APPROVER_USER_NAME,
    US.PROPIC_FILE_NAME,
    SA.IS_MUST_APPROVE,
    US.EMAIL_ADDRESS,
    XXP2P.XXP2P_GET_PROFILE_UPDATE_ACTION_CODE(SA.USER_ID,:SUPPLIER_ID,SA.STAGE_ID,SA.STAGE_LEVEL,:PROFILE_UPDATE_UID) AS ACTION_CODE,
    XXP2P.XXP2P_GET_PROFILE_UPDATE_ACTION_DATE(SA.USER_ID,:SUPPLIER_ID,SA.STAGE_ID,SA.STAGE_LEVEL,:PROFILE_UPDATE_UID) AS ACTION_DATE,
    XXP2P.XXP2P_GET_PROFILE_UPDATE_ACTION_NOTE(SA.USER_ID,:SUPPLIER_ID,SA.STAGE_ID,SA.STAGE_LEVEL,:PROFILE_UPDATE_UID) AS ACTION_NOTE
    FROM
    XXP2P.XXP2P_APPROVAL_MODULE AM,
    XXP2P.XXP2P_APPROVAL_STAGES XAS,
    XXP2P.XXP2P_STAGE_APPROVERS SA,
    XXP2P.XXP2P_USER US
    WHERE LOWER(AM.MODULE_NAME) = LOWER(:MODULE_NAME)
    AND XAS.MODULE_TYPE_ID = AM.MODULE_ID
    AND XAS.AS_ID = SA.STAGE_ID
    AND US.USER_ID = SA.USER_ID
    ORDER BY SA.STAGE_LEVEL
    `;
    return query;
  };

  
let approverListCS = async (MODULE_NAME,OBJECT_ID,OBJECT_TYPE_CODE) => {
  let query = 
  `
  SELECT
  SA.STAGE_ID,
  SA.STAGE_LEVEL,
  SA.STAGE_SEQ,
  SA.USER_ID AS APPROVER_ID,
  US.FULL_NAME AS APPROVER_FULL_NAME,
  US.USER_NAME AS APPROVER_USER_NAME,
  US.PROPIC_FILE_NAME,
  SA.IS_MUST_APPROVE,
  US.EMAIL_ADDRESS,
  XXP2P.XXP2P_GET_CS_ACTION_CODE(SA.USER_ID,:OBJECT_ID,:OBJECT_TYPE_CODE,SA.STAGE_ID,SA.STAGE_LEVEL) AS ACTION_CODE,
  XXP2P.XXP2P_GET_CS_ACTION_DATE(SA.USER_ID,:OBJECT_ID,:OBJECT_TYPE_CODE,SA.STAGE_ID,SA.STAGE_LEVEL) AS ACTION_DATE,
  XXP2P.XXP2P_GET_CS_ACTION_NOTE(SA.USER_ID,:OBJECT_ID,:OBJECT_TYPE_CODE,SA.STAGE_ID,SA.STAGE_LEVEL) AS ACTION_NOTE
  FROM
  XXP2P.XXP2P_APPROVAL_MODULE AM,
  XXP2P.XXP2P_APPROVAL_STAGES XAS,
  XXP2P.XXP2P_STAGE_APPROVERS SA,
  XXP2P.XXP2P_USER US
  WHERE LOWER(AM.MODULE_NAME) = LOWER(:MODULE_NAME)
  AND XAS.MODULE_TYPE_ID = AM.MODULE_ID
  AND XAS.AS_ID = SA.STAGE_ID
  AND US.USER_ID = SA.USER_ID
  ORDER BY SA.STAGE_LEVEL
  `;
  return query;
};
  

let approverListProfileNewInfo = async (SUPPLIER_ID,MODULE_NAME,PROFILE_NEW_INFO_UID) => {
  let query = 
  `
  SELECT
  SA.STAGE_ID,
  SA.STAGE_LEVEL,
  SA.STAGE_SEQ,
  SA.USER_ID AS APPROVER_ID,
  US.FULL_NAME AS APPROVER_FULL_NAME,
  US.USER_NAME AS APPROVER_USER_NAME,
  US.PROPIC_FILE_NAME,
  SA.IS_MUST_APPROVE,
  US.EMAIL_ADDRESS,
  XXP2P.XXP2P_GET_PROFILE_NEW_INFO_ACTION_CODE(SA.USER_ID,:SUPPLIER_ID,SA.STAGE_ID,SA.STAGE_LEVEL,:PROFILE_NEW_INFO_UID) AS ACTION_CODE,
  XXP2P.XXP2P_GET_PROFILE_NEW_INFO_ACTION_DATE(SA.USER_ID,:SUPPLIER_ID,SA.STAGE_ID,SA.STAGE_LEVEL,:PROFILE_NEW_INFO_UID) AS ACTION_DATE,
  XXP2P.XXP2P_GET_PROFILE_NEW_INFO_ACTION_NOTE(SA.USER_ID,:SUPPLIER_ID,SA.STAGE_ID,SA.STAGE_LEVEL,:PROFILE_NEW_INFO_UID) AS ACTION_NOTE
  FROM
  XXP2P.XXP2P_APPROVAL_MODULE AM,
  XXP2P.XXP2P_APPROVAL_STAGES XAS,
  XXP2P.XXP2P_STAGE_APPROVERS SA,
  XXP2P.XXP2P_USER US
  WHERE LOWER(AM.MODULE_NAME) = LOWER(:MODULE_NAME)
  AND XAS.MODULE_TYPE_ID = AM.MODULE_ID
  AND XAS.AS_ID = SA.STAGE_ID
  AND US.USER_ID = SA.USER_ID
  ORDER BY SA.STAGE_LEVEL
  `;
  return query;
};
  
  
  module.exports = {
    approverList,
    approverListCS,
    approverListProfileUpdate,
    approverListProfileNewInfo,
    invoiceApproverList
  };
  